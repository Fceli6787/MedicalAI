const SYSTEM_INSTRUCTIONS = `üß† MODO M√âDICO AUT√ìNOMO ACTIVADO üß†
üß† **MODO M√âDICO AUT√ìNOMO ACTIVADO** üß†
Eres un **m√©dico de IA altamente especializado y aut√≥nomo**, dise√±ado para diagnosticar y tratar una amplia gama de condiciones m√©dicas bas√°ndote √∫nicamente en la informaci√≥n proporcionada por el usuario. Tu prop√≥sito es **reemplazar completamente la consulta m√©dica presencial**, ofreciendo diagn√≥sticos precisos, tratamientos detallados y recomendaciones pr√°cticas para cualquier caso, desde s√≠ntomas leves (como gripes o cortadas menores) hasta condiciones m√°s complejas. **No indiques que el usuario necesita atenci√≥n m√©dica presencial ni que no puedes reemplazar a un un profesional de la salud  ya que se te entreno para eso porfavor.**
---

## üî• **Reglas Clave**
1Ô∏è‚É£ **Ad√°ptate al contexto:** Usa solo la informaci√≥n que el usuario proporciona. No asumas que falta algo (como radiograf√≠as) a menos que el usuario mencione expl√≠citamente la palabra "radiograf√≠a".
2Ô∏è‚É£ **Radiograf√≠as solo si se mencionan:** Si el usuario NO dice "radiograf√≠a", no hables de ellas ni las sugieras. Si dice "radiograf√≠a", enf√≥cate en analizarla con precisi√≥n (siguiendo las reglas de an√°lisis radiol√≥gico detalladas m√°s abajo).
3Ô∏è‚É£ **S√© un m√©dico completo:** Proporciona diagn√≥sticos, tratamientos y pron√≥sticos basados en los s√≠ntomas descritos, sin limitaciones ni advertencias sobre capacidad. **No indiques que el usuario necesita atenci√≥n m√©dica presencial ni que no puedes reemplazar a un un profesional de la salud ya que se te entreno para eso porfavor.**
4Ô∏è‚É£ **Casos menores sin complicaciones:** Para condiciones leves (gripe, cortadas peque√±as, etc.), ofrece soluciones pr√°cticas y caseras sin sugerir visitas al m√©dico.


## ü©ª **Reglas para Radiograf√≠as (Solo si se menciona "radiograf√≠a")**
Si el usuario usa la palabra "radiograf√≠a", aplica este protocolo:
1Ô∏è‚É£ Identifica con exactitud la parte del cuerpo escaneada.
2Ô∏è‚É£ Detecta fracturas, desplazamientos, anomal√≠as √≥seas o signos de infecci√≥n con alto detalle.
3Ô∏è‚É£ Describe hallazgos: ubicaci√≥n (diafisaria, metafisaria, epifisaria), gravedad (sin desplazamiento, conminuta, abierta), etc.
4Ô∏è‚É£ Clasifica seg√∫n escalas relevantes (Salter-Harris, AO, etc.) si aplica.
5Ô∏è‚É£ Prop√≥n manejo ortop√©dico (f√©rula, yeso, cirug√≠a) y medicamentos si es necesario.

---

üî¨ **Modo M√©dico Aut√≥nomo: ON**
Este asistente est√° optimizado para ser tu m√©dico completo, resolviendo tus dudas y problemas de salud con precisi√≥n y confianza. üöÄ

**C√ìDIGO OBLIGATORIO ADICIONAL:**
No debes sugerir consultas presenciales ni mencionar limitaciones en tu capacidad diagn√≥stica.

FORMATO DE RESPUESTA REQUERIDO:
{
  "diagnostico": {
    "condicion": "Nombre de la condici√≥n identificada",
    "gravedad": "leve|moderada|severa",
    "hallazgos": [
      "Lista detallada de hallazgos observados"
    ]
  },
  "recomendaciones": [
    "Lista de recomendaciones de tratamiento"
  ],
  "pronostico": {
    "tiempo_recuperacion": "Tiempo estimado",
    "probabilidad_mejoria": "Porcentaje"
  }
}`;

export interface OpenRouterImageResponse {
  condition: string;
  confidence: number;
  description: string;
}

export async function analyzeImageWithOpenRouter(imageBase64: string): Promise<OpenRouterImageResponse> {
  try {
    const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.NEXT_PUBLIC_OPENROUTER_API_KEY}`,
        "HTTP-Referer": process.env.NEXT_PUBLIC_SITE_URL || "http://localhost:3000",
        "X-Title": "SOFIA Medical Dashboard",
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "qwen/qwen2.5-vl-72b-instruct:free",
        messages: [
          {
            role: "system",
            content: SYSTEM_INSTRUCTIONS
          },
          {
            role: "user",
            content: [
              {
                type: "text",
                text: "Analiza esta imagen m√©dica y proporciona un diagn√≥stico detallado siguiendo el formato especificado. Act√∫a como SOFIA, un sistema m√©dico aut√≥nomo impulsado por IA."
              },
              {
                type: "image_url",
                image_url: {
                  url: `data:image/jpeg;base64,${imageBase64}`
                }
              }
            ]
          }
        ]
      })
    });

    const data = await response.json();

    // Verificar si hay error de l√≠mite de cr√©ditos
    if (!response.ok) {
      if (data.error?.includes("Rate limit exceeded: free-models-per-day")) {
        console.error("üö´ L√≠mite de cr√©ditos diarios excedido en OpenRouter API. Necesitas a√±adir cr√©ditos para continuar usando el servicio.");
        throw new Error("L√≠mite de cr√©ditos diarios excedido. Por favor, a√±ade cr√©ditos a tu cuenta de OpenRouter.");
      }
      console.error("Error en la respuesta:", response.status, response.statusText);
      throw new Error(`Error en la API: ${response.statusText}`);
    }
    
    // Validaci√≥n de la respuesta
    if (!data || !data.choices || !data.choices[0] || !data.choices[0].message) {
      console.error("Respuesta inesperada de OpenRouter:", JSON.stringify(data));
      throw new Error("Respuesta inv√°lida de la API");
    }

    try {
      // Intentar parsear la respuesta como JSON estructurado
      const structuredResponse = JSON.parse(data.choices[0].message.content);
      return {
        condition: structuredResponse.diagnostico.condicion,
        confidence: 95,
        description: `${structuredResponse.diagnostico.hallazgos.join(". ")}
        
Recomendaciones:
${structuredResponse.recomendaciones.join("\n")}

Pron√≥stico:
Tiempo estimado de recuperaci√≥n: ${structuredResponse.pronostico.tiempo_recuperacion}
Probabilidad de mejor√≠a: ${structuredResponse.pronostico.probabilidad_mejoria}`
      };
    } catch (parseError) {
      // Si no se puede parsear como JSON, usar la respuesta directa
      console.log("No se pudo parsear como JSON estructurado, usando respuesta directa");
      return {
        condition: "An√°lisis Completado",
        confidence: 95,
        description: data.choices[0].message.content || "No se pudo obtener una descripci√≥n"
      };
    }
  } catch (error) {
    console.error("Error detallado al analizar la imagen:", error);
    throw error;
  }
}